* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* these are to prevent or terminate excess paddings or margins and also to keep the border sizing initial, 
    so you feel more viable when ur building ur projects */
}

html,
body {
    height: 100%;
    cursor: cell !important;
    /* also setting up the cursor as something like a aiming crossahir just to get a more dynamic feel of the overall
    kdr calculater */
    overflow: hidden;
    /* preventing scrolls within the web, */
    z-index: 999;
}

html,
.main {
    background: linear-gradient(90deg, #000000, #000000);
    width: 100%;
    height: 100%;
    /* default initial width to keep everything visible to the user */
}

.r1 {
    position: absolute;
    width: calc(500px - 40vh);
    height: calc(500px - 40vh);
    /* using very specific widths and heights using calc */
    /* and also to make it visualize as more dynamic */
    background: radial-gradient(circle at top left, rgba(0, 0, 0, 0) 0%, rgba(155, 155, 155, 0.1)) 70%;
    background-size: 700% 700%;
    /* radial gradients make the decorations feel more vibrant */
    border-radius: 50% 40%;
    filter: blur(20px);
    transform: rotate(45deg);
    /* rotating the object background to make it look more balanced and seemingly enhancing user interface */
    animation: r1anim 5s linear infinite;
    /* filtering to make it blend more into the border */
}

@keyframes r1anim {

    0% {
        box-shadow: 0px 0xp 0px;
        transition: none;
    }

    50% {
        box-shadow: 0px 0px 700px rgb(255, 255, 255);
        transition: cubic-bezier(1, 0, 1, 0);
    }

    70% {
        box-shadow: 0px 0px 350px rgb(255, 255, 255);
        transition: linear;
    }

    100% {
        box-shadow: 0px 0px 50px rgb(255, 255, 255);
        transition: all linear;
        filter: blur(20px);
        /* making sure the filter blur stays the same in 100% */
    }

    /* adding likeable animations to enhance the users experience on the web and also while doing so
    im gaining experience on the matter */

}

/* that pretty concludes the animation for the background of the 2v2 calculater, i highly doubt ill be adding more
decorations for the sake of the background */

.radial {
    position: absolute;
    /* using position absolute to attain complete control over the content */
    top: 200px;
    left: 900px;
    /* im constantly changing the positions of these contents due to changes in ideas and plans itself,
    im guessing this is normal considering the amount of changes that are constantly being made to the web, (eg
    like new contents positions and alignments) */
}

/* heading section */

.mainheading {
    color: rgb(255, 255, 255);
    font-family: 'arial', sans-serif;
    font-weight: 900;
    font-size: calc(10em - 7rem);
    /* the calculation between these 2 sizes creates a specific size to your liking (the developer not the
    actual user whos testing/using the website) */
    flex: none;
    white-space: nowrap;
    outline: 4px solid rgb(255, 255, 255);
    padding: 60px 200px 60px 60px;
    border-end-end-radius: 700px;
}

body .mainheading {
    position: absolute;
    /* using absolute positioning to control the contents exact placement */
    left: 0;
    top: 0;
}

/* now for a quick configuration of the heading hover effect */

header .mhdeco1 {
    content: '';
    position: absolute;
    background-color: inherit;
    /* inherits the background color of the webpages background color */
    top: 60px;
    bottom: 0;
    left: 50px;
    right: 0;
    width: 700px;
    z-index: 1000;
    height: 80px;
    border-radius: 40px;
    /* border radius isnt needed but for the sake of how the div looks ill add it */
}

header .mhdeco1:hover {
    background: linear-gradient(to right, #000000, #020202);
    /* transforms the background color of the heading text to the following applied */
    transition: 10ms linear;
    /* making the text inivis on hover */
}

/* concludes */

/* now the actual navigation bar items (setting up) */

.navbar {
    font-family: 'poppins', sans-serif;
    font-weight: 900;
}

.backp {
    color: rgb(0, 0, 0);
    background-color: rgb(255, 255, 255);
    width: 140px;
    height: 40px;
    border-radius: 20px;
    padding: 8px 16px;
}

.backpage {
    position: absolute;
    left: 930px;
    top: 25px;
}

.changemode {
    color: rgb(0, 0, 0);
    background-color: rgb(255, 255, 255);
    width: 210px;
    height: 40px;
    border-radius: 20px;
    padding: 8px 11.5px;
}

.gchange {
    position: absolute;
    left: 1130px;
    top: 25px;
}

nav a {
    text-decoration: none;
    cursor: cell !important;
    /* keeping this important since i want the webpage to understand i fairly want the users crosshair as a
    cell cursor */
}

nav a:hover {
    text-decoration: underline;
    transition: all;
}

nav span:hover,
nav p {
    color: inherit;
}

/* ^ that concludes me working on the anchor tags effects */